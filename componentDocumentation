1) Dynamic Rendering


app/templates/components/foo-component.hbs

<h3>Hello from foo!</h3>
<p>{{this.post.body}}</p>


/////////////////////////////////


app/templates/components/bar-component.hbs

<h3>Hello from bar!</h3>
<div>{{this.post.author}}</div>

/////////////////////////////////


app/routes/index.js

import Route from '@ember/routing/route';

export default Route.extend({
  model() {
    return this.store.findAll('post');
  }
});

/////////////////////////////////

app/templates/index.hbs

{{#each this.model as |post|}}
  {{!-- either foo-component or bar-component --}}
  {{component post.componentName post=post}}
{{/each}}

///////////////////////////////(or)


app/templates/index.hbs

{{#each this.model as |post|}}
  {{!-- either foo-component or bar-component --}}
  {{#let (component this.componentName) as |Post|}}
    <Post @post={{post}} />
  {{/let}}
{{/each}}


2) Order of Lifecycle Hooks Called

*) On Initial Render

    init                // init only
    didReceiveAttrs
    willRender
    didInsertElement    // init only
    didRender

*) On Re-Render

    didUpdateAttrs   
    didReceiveAttrs     // init
    willUpdate
    willRender          // init          
    didUpdate
    didRender           // init

*) On Component Destroy

    willDestroyElement
    willClearRender
    didDestroyElement

3) didUpdateAttrs

didUpdateAttrs runs when the attributes of a component have changed, but not when the component is re-rendered, via component.rerender, component.set, or changes in models or services used by the template.

4) didReceiveAttrs

didReceiveAttrs runs after init, and it also runs on subsequent re-renders, which is useful for logic that is the same on all renders. It does not run when the re-render has been initiated internally.

5) didInsertElement().

After a component successfully renders its backing HTML element into the DOM, it will trigger its didInsertElement() hook.

Ember guarantees that, by the time didInsertElement() is called:

*) The component's element has been both created and inserted into the DOM.
*) The component's element is accessible via the component's this.element property.

6) didRender

The didRender hook is called during both render and re-render after the template has rendered and the DOM updated

7) Positional Params

app/templates/index.hbs

{{#each this.model as |post|}}
  {{blog-post post.title post.body}}
{{/each}}

/////////////////////////

app/components/blog-post.js

import Component from '@ember/component';

export default Component.extend({}).reopenClass({
  positionalParams: ['title', 'body']
});
