1) .hbs -> Handlebars

2) There are two main types of templates: Route templates and Component templates.

3) Template restrictions:        
        js and css should be added separately.

4) component 

    <div>
      {{outlet}}
    </div>

    <!-- One way to use a component within a template -->
    <MyComponent />

    /////////////////

    <!-- A property that is defined in a component's
    JavaScript file -->
    {{this.numberOfSquirrels}}

    <!-- Some data passed down from a parent component
    or controller -->
    {{@weatherStatus}}

    <!-- This button uses Ember Actions to make it interactive.
    A method named `plantATree` is called when the button is
    clicked. `plantATree` comes from the JavaScript file
    associated with the template, like a Component or
    Controller -->
    <button onclick={{action 'plantATree'}}>
      More trees!
    <button>

    <!-- Here's an example of template logic in action.
    If the `this.skyIsBlue` property is `true`, the text
    inside will be shown -->
    {{#if this.skyIsBlue}}
      If the skyIsBlue property is true, show this message
    {{/if}}

    <!-- You can pass a whole block of markup and handlebars
    content from one component to another. yield is where
    the block shows up when the page is rendered -->
    {{yield}}

5) Helper

    import { helper as buildHelper } from '@ember/component/helper';

    export function sum(params) {
      return params[0] + params[1]
    };

    export const helper = buildHelper(sum);

    /////////////////////////////

    <p>Total: {{sum 1 2}}</p>

    {{sum (multiply 2 4) 2}}    
    
6) CSS CRN link

    adding external crn link 
    
    eg: <link integrity="" rel="stylesheet" href="https://my-font-cdn/something.css">
    
7) this -> to refer data defined in this js file
   @ -> to refer data passed from parent file
   